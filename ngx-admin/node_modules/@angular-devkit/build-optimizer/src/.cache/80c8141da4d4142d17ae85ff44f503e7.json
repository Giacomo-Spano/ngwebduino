{"remainingRequest":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@nebular\\theme\\components\\calendar\\calendar-range.component.js","dependencies":[{"path":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@nebular\\theme\\components\\calendar\\calendar-range.component.js","mtime":499162500000},{"path":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536758963108},{"path":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NbCalendarSize, NbCalendarViewMode, NbDateTimeUtil } from '../calendar-kit';\nimport { NbCalendarRangeDayCellComponent, NbCalendarRangeYearCellComponent } from './calendar-range-cells';\n/**\n * Calendar component provides a capability to choose ranges.\n * For additional info check `NbBaseCalendarComponent`.\n *\n * ```html\n * <nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n * ```\n */\nvar NbCalendarRangeComponent = /*@__PURE__*/ (function () {\n    function NbCalendarRangeComponent() {\n        /**\n           * Defines if we should render previous and next months\n           * in the current month view.\n           * */\n        this.boundingMonth = true;\n        /**\n           * Defines starting view for the calendar.\n           * */\n        this.startView = NbCalendarViewMode.DATE;\n        this.dayCellComponent = NbCalendarRangeDayCellComponent;\n        this.yearCellComponent = NbCalendarRangeYearCellComponent;\n        /**\n           * Size of the calendar and entire components.\n           * Can be 'medium' which is default or 'large'.\n           * */\n        this.size = NbCalendarSize.MEDIUM;\n        /**\n           * Emits range when start selected and emits again when end selected.\n           * */\n        this.rangeChange = new EventEmitter();\n    }\n    Object.defineProperty(NbCalendarRangeComponent.prototype, \"_cellComponent\", {\n        set: /**\n           * Custom day cell component. Have to implement `NbCalendarCell` interface.\n           * */ function (cellComponent) {\n            if (cellComponent) {\n                this.dayCellComponent = cellComponent;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbCalendarRangeComponent.prototype, \"_yearCellComponent\", {\n        set: /**\n           * Custom year cell component. Have to implement `NbCalendarCell` interface.\n           * */ function (cellComponent) {\n            if (cellComponent) {\n                this.yearCellComponent = cellComponent;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbCalendarRangeComponent.prototype.onChange = function (date) {\n        this.initDateIfNull();\n        this.handleSelected(date);\n    };\n    NbCalendarRangeComponent.prototype.initDateIfNull = function () {\n        if (!this.range) {\n            this.range = { start: null, end: null };\n        }\n    };\n    NbCalendarRangeComponent.prototype.handleSelected = function (date) {\n        if (this.selectionStarted()) {\n            this.selectEnd(date);\n        }\n        else {\n            this.selectStart(date);\n        }\n    };\n    NbCalendarRangeComponent.prototype.selectionStarted = function () {\n        var _a = this.range, start = _a.start, end = _a.end;\n        return start && !end;\n    };\n    NbCalendarRangeComponent.prototype.selectStart = function (start) {\n        this.selectRange({ start: start });\n    };\n    NbCalendarRangeComponent.prototype.selectEnd = function (date) {\n        var start = this.range.start;\n        if (NbDateTimeUtil.compareDates(date, start) > 0) {\n            this.selectRange({ start: start, end: date });\n        }\n        else {\n            this.selectRange({ start: date, end: start });\n        }\n    };\n    NbCalendarRangeComponent.prototype.selectRange = function (range) {\n        this.range = range;\n        this.rangeChange.emit(range);\n    };\n    return NbCalendarRangeComponent;\n}());\nexport { NbCalendarRangeComponent };\n//# sourceMappingURL=calendar-range.component.js.map\n",null]}