{"remainingRequest":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@nebular\\auth\\strategies\\password\\password-strategy-options.js","dependencies":[{"path":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@nebular\\auth\\strategies\\password\\password-strategy-options.js","mtime":499162500000},{"path":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536758963108},{"path":"C:\\Users\\giaco\\Documents\\nebular\\ngx-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { NbAuthSimpleToken } from '../../services';\r\nimport { NbAuthStrategyOptions } from '../auth-strategy-options';\r\nimport { getDeepFromObject } from '../../helpers';\r\nvar NbPasswordAuthStrategyOptions = /*@__PURE__*/ (function (_super) {\r\n    __extends(NbPasswordAuthStrategyOptions, _super);\r\n    function NbPasswordAuthStrategyOptions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.baseEndpoint = '/api/auth/';\r\n        _this.login = {\r\n            alwaysFail: false,\r\n            endpoint: 'login',\r\n            method: 'post',\r\n            failWhenNoToken: true,\r\n            redirect: {\r\n                success: '/',\r\n                failure: null,\r\n            },\r\n            defaultErrors: ['Login/Email combination is not correct, please try again.'],\r\n            defaultMessages: ['You have been successfully logged in.'],\r\n        };\r\n        _this.register = {\r\n            alwaysFail: false,\r\n            rememberMe: true,\r\n            endpoint: 'register',\r\n            method: 'post',\r\n            failWhenNoToken: true,\r\n            redirect: {\r\n                success: '/',\r\n                failure: null,\r\n            },\r\n            defaultErrors: ['Something went wrong, please try again.'],\r\n            defaultMessages: ['You have been successfully registered.'],\r\n        };\r\n        _this.requestPass = {\r\n            endpoint: 'request-pass',\r\n            method: 'post',\r\n            redirect: {\r\n                success: '/',\r\n                failure: null,\r\n            },\r\n            defaultErrors: ['Something went wrong, please try again.'],\r\n            defaultMessages: ['Reset password instructions have been sent to your email.'],\r\n        };\r\n        _this.resetPass = {\r\n            endpoint: 'reset-pass',\r\n            method: 'put',\r\n            redirect: {\r\n                success: '/',\r\n                failure: null,\r\n            },\r\n            resetPasswordTokenKey: 'reset_password_token',\r\n            defaultErrors: ['Something went wrong, please try again.'],\r\n            defaultMessages: ['Your password has been successfully changed.'],\r\n        };\r\n        _this.logout = {\r\n            alwaysFail: false,\r\n            endpoint: 'logout',\r\n            method: 'delete',\r\n            redirect: {\r\n                success: '/',\r\n                failure: null,\r\n            },\r\n            defaultErrors: ['Something went wrong, please try again.'],\r\n            defaultMessages: ['You have been successfully logged out.'],\r\n        };\r\n        _this.refreshToken = {\r\n            endpoint: 'refresh-token',\r\n            method: 'post',\r\n            failWhenNoToken: true,\r\n            redirect: {\r\n                success: null,\r\n                failure: null,\r\n            },\r\n            defaultErrors: ['Something went wrong, please try again.'],\r\n            defaultMessages: ['Your token has been successfully refreshed.'],\r\n        };\r\n        _this.token = {\r\n            class: NbAuthSimpleToken,\r\n            key: 'data.token',\r\n            getter: function (module, res, options) {\r\n                return getDeepFromObject(res.body, options.token.key);\r\n            },\r\n        };\r\n        _this.errors = {\r\n            key: 'data.errors',\r\n            getter: function (module, res, options) {\r\n                return getDeepFromObject(res.error, options.errors.key, options[module].defaultErrors);\r\n            },\r\n        };\r\n        _this.messages = {\r\n            key: 'data.messages',\r\n            getter: function (module, res, options) {\r\n                return getDeepFromObject(res.body, options.messages.key, options[module].defaultMessages);\r\n            },\r\n        };\r\n        return _this;\r\n    }\r\n    return NbPasswordAuthStrategyOptions;\r\n}(NbAuthStrategyOptions));\r\nexport { NbPasswordAuthStrategyOptions };\r\nexport var passwordStrategyOptions = new NbPasswordAuthStrategyOptions();\r\n//# sourceMappingURL=password-strategy-options.js.map\r\n",null]}