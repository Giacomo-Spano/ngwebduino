{"version":3,"sources":["ng://ng-number-picker/lib/number-picker.service.ts","ng://ng-number-picker/lib/number-picker.component.ts","ng://ng-number-picker/lib/number-picker.module.ts"],"names":["NumberPickerService","Injectable","NumberPickerComponent$$1","numberPickerService","this","EventEmitter","NumberPickerComponent","initPicker","buttonsOrientation","event","preventDefault","stopPropagation","isInputFocused","wheelUp","delta","wheelDelta","detail","afterMouseWheels","onPickStarted","onIncrease","onDecrease","onPickStoped","value","max","min","canDecrease","round","step","valueChange","emit","minReached","canIncrease","maxReached","increase","afterMouseDown","keyCode","eventHolder","setTimeout","_this","countInterval","setInterval","pickTimer","pickStartAfter","afterMouseUp","isArrowUpDown","loopPick","isArowUp","afterPick","up","isLeftClick","which","clearTimers","clearTimeout","clearInterval","start","parseFloat","exec","String","length","Math","pow","precision","pickStarted","pickUpStarted","pickDownStarted","pickUpStoped","pickStoped","pickDownStoped","witch","parseVal","getPrecision","Component","args","selector","template","styles","Input","Output","NumberPickerModule","NgModule","imports","CommonModule","FormsModule","providers","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { buttonsOrientationType, sizeType } from './number-picker.config';\nimport { CustomClasses } from './number-picker.config';\n\n@Injectable()\nexport class NumberPickerService {\n  /**\n   * Min picker value\n   */\n  min = 0;\n  /**\n   * Max picker value\n   */\n  max = 100;\n  /**\n   * Pick step value\n   */\n  step = 1;\n  /**\n   * Delay for start picking values\n   */\n  pickStartAfter = 500;\n  /**\n   * Delay betweens each pick\n   */\n  pickTimer = 100;\n  /**\n   * value precision\n   */\n  precision = 1;\n  /**\n   * Inital picker value\n   */\n  value = null;\n}\n","import { Component, OnInit, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { buttonsOrientationType, sizeType, CustomClasses } from './number-picker.config';\nimport { NumberPickerService } from '../public_api';\n\n@Component({\n  selector: 'ng-number-picker',\n  template: `\n  <div class=\"input-group mb-3 input-{{size}} {{customClass.container}}\">\n  <!-- Horizontal decrease button orientation -->\n  <div class=\"input-group-prepend\" *ngIf=\"isHorizontal() && showDownButton\">\n    <span class=\"input-group-text decrease {{customClass.down}}\" (click)=\"onDecrease($event)\"\n    (mouseup)=\"onMouseUp($event, false)\" (mousedown)=\"onMouseDown($event, false)\">-</span>\n  </div>\n  <!-- Input prefix -->\n  <div *ngIf=\"prefix\" class=\"input-group-prepend\">\n    <span class=\"input-group-text {{customClass.prefix}}\">{{prefix}}</span>\n  </div>\n  <input type=\"number\" class=\"form-control\" name=\"input-spin-val\"\n  [(ngModel)]=\"value\"\n  [readOnly]=\"inputReadOnly\"\n  (blur)=\"onBlur($event)\"\n  (focus)=\"onFocus($event)\"\n  (mousewheel)=\"mouseWheel && onMouseWheel($event)\"\n  (keyup)=\"arrowKeys && onKeyUp($event)\"\n  (keydown)=\"arrowKeys && onKeyDown($event)\"\n  (keydown.arrowup)=\"arrowKeys && onIncrease($event)\"\n  (keydown.arrowdown)=\"arrowKeys && onDecrease($event)\"\n  (change)=\"onValueChange($event)\"\n  [placeholder]=\"placeholder\"\n  >\n  <!-- Input postfix -->\n  <div *ngIf=\"postfix\" class=\"input-group-prepend\">\n    <span class=\"input-group-text {{customClass.postfix}}\" [style.borderLeft]=\"'0'\">{{postfix}}</span>\n  </div>\n  <!-- Horizontal increase button orientation -->\n  <div class=\"input-group-prepend\" *ngIf=\"isHorizontal() && showUpButton\">\n    <span class=\"input-group-text increase {{customClass.up}}\" [style.borderLeft]=\"(!postfix) ? '0' : ''\" (click)=\"onIncrease($event)\"\n    (mouseup)=\"onMouseUp($event)\" (mousedown)=\"onMouseDown($event)\">+</span>\n  </div>\n  <!-- Vertical buttons orientation -->\n  <div class=\"input-group-append\" *ngIf=\"!isHorizontal()\">\n    <span class=\"input-group-text vertical p-0\">\n      <span *ngIf=\"showUpButton\" class=\"{{customClass.up}}\" (click)=\"onIncrease($event)\" (mouseup)=\"onMouseUp($event)\"\n      (mousedown)=\"onMouseDown($event)\">+</span>\n      <span *ngIf=\"showDownButton\" class=\"{{customClass.down}}\" (click)=\"onDecrease($event)\" (mouseup)=\"onMouseUp($event, false)\"\n      (mousedown)=\"onMouseDown($event, false)\">-</span>\n    </span>\n  </div>\n</div>\n  `,\n  styles: [`input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.decrease:hover,.increase:hover{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;background-color:#d8d8d8}.increase{border-top-right-radius:3px!important;border-bottom-right-radius:3px!important}.vertical{display:flex;justify-content:center;flex-direction:column;text-align:center;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.vertical span{line-height:15px}.input-md .vertical span,.input-sm .vertical span{padding:2px 10px}.input-lg .vertical span{padding:4px 10px}.input-xlg .vertical span{padding:7px 10px}.input-md,.input-medium{height:45px}.input-large,.input-lg{height:50px}.input-xlarge,.input-xlg{height:75px}.input-md input,.input-md span,.input-medium input,.input-medium span{font-size:22px}.input-large input,.input-large span,.input-lg input,.input-lg span{font-size:25px}.input-xlarge input,.input-xlarge span,.input-xlg input,.input-xlg span{font-size:38px}`]\n})\nexport class NumberPickerComponent implements OnInit {\n  private precision: number;\n  private eventHolder = null;\n  private countInterval = null;\n  private isInputFocused = false;\n\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step: number;\n  @Input() value: number;\n  @Input() pickStartAfter: number;\n  @Input() pickTimer: number;\n  @Input() prefix: string;\n  @Input() postfix: string;\n  @Input() placeholder: string;\n  @Input() buttonsOrientation: buttonsOrientationType;\n  @Input() size: sizeType = 'md';\n  @Input() customClass: CustomClasses = {};\n  @Input() mouseWheel = false;\n  @Input() arrowKeys = true;\n  @Input() inputReadOnly = false;\n  @Input() showUpButton = true;\n  @Input() showDownButton = true;\n  @Output() valueChange: EventEmitter<number> = new EventEmitter();\n  @Output() minReached: EventEmitter<boolean> = new EventEmitter();\n  @Output() maxReached: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickStarted: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickStoped: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickUpStarted: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickUpStoped: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickDownStarted: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickDownStoped: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(private numberPickerService: NumberPickerService) { }\n\n  ngOnInit() {\n    this.initPicker();\n  }\n\n  isHorizontal(): boolean {\n    return (this.buttonsOrientation !== 'v' && this.buttonsOrientation !== 'vertical');\n  }\n\n  onFocus(event: FocusEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.isInputFocused = true;\n  }\n\n  onBlur(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.isInputFocused = false;\n  }\n\n  onMouseWheel(event: MouseWheelEvent) {\n    if (this.isInputFocused) {\n      event.preventDefault();\n      let wheelUp = null;\n      let delta = null;\n\n      if (event.wheelDelta) {\n        delta = event.wheelDelta / 60;\n      } else if (event.detail) {\n        delta = -event.detail / 2;\n      }\n\n      if (delta !== null) {\n        wheelUp = delta > 0;\n      }\n\n      this.afterMouseWheels(wheelUp, event);\n      event.stopPropagation();\n    }\n  }\n\n  private afterMouseWheels(wheelUp: any, event: WheelEvent) {\n    this.onPickStarted(wheelUp);\n    if (wheelUp) {\n      this.onIncrease(event);\n    } else {\n      this.onDecrease(event);\n    }\n    this.onPickStoped(wheelUp);\n  }\n\n  onValueChange(event: Event) {\n    if (this.value > this.max) {\n      this.value = this.max;\n    } else if (this.value < this.min) {\n      this.value = this.min;\n    }\n  }\n\n  onDecrease(event: MouseEvent | MouseWheelEvent | KeyboardEvent) {\n    event.preventDefault();\n    if (this.canDecrease()) {\n      this.value = this.round((this.value > this.min) ? this.value -= this.step : this.value);\n      this.valueChange.emit(this.value);\n    } else {\n      this.minReached.emit(true);\n    }\n    event.stopPropagation();\n  }\n\n  onIncrease(event: MouseEvent | MouseWheelEvent | KeyboardEvent) {\n    event.preventDefault();\n    if (this.canIncrease()) {\n      this.value = this.round((this.value < this.max) ? this.value += this.step : this.value);\n      this.valueChange.emit(this.value);\n    } else {\n      this.maxReached.emit(true);\n    }\n    event.stopPropagation();\n  }\n\n  onMouseDown(event: MouseEvent, increase: boolean = true) {\n    this.afterMouseDown(increase, event);\n  }\n\n  private isArrowUpDown(keyCode: number): boolean {\n    return keyCode === 38 || keyCode === 40;\n  }\n\n  private isArowUp(keyCode: number): boolean {\n    return keyCode === 38;\n  }\n\n  private loopPick(increase: boolean, event: MouseEvent | KeyboardEvent) {\n    this.onPickStarted(increase);\n    this.eventHolder = setTimeout(() => {\n      this.countInterval = setInterval(() => {\n        if (increase) {\n          this.onIncrease(event);\n        } else {\n          this.onDecrease(event);\n        }\n      }, this.pickTimer);\n    }, this.pickStartAfter);\n  }\n\n  onMouseUp(event: MouseEvent, increase: boolean = true) {\n    this.afterMouseUp(increase, event);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (this.isArrowUpDown(event.keyCode)) {\n      event.preventDefault();\n      if (!this.eventHolder) {\n        this.loopPick(this.isArowUp(event.keyCode), event);\n      }\n    }\n    event.stopPropagation();\n  }\n\n  onKeyUp(event: KeyboardEvent) {\n    if (this.isArrowUpDown(event.keyCode)) {\n      event.preventDefault();\n      this.afterPick(this.isArowUp(event.keyCode));\n    }\n    event.stopPropagation();\n  }\n\n  private afterMouseDown(up: boolean, event: MouseEvent) {\n    event.preventDefault();\n    if (this.isLeftClick(event.which)) {\n      this.loopPick(up, event);\n    }\n    event.stopPropagation();\n  }\n\n  private afterMouseUp(up: boolean, event: MouseEvent) {\n    event.preventDefault();\n    this.afterPick(up);\n    event.stopPropagation();\n  }\n\n  private afterPick(up: boolean) {\n    this.onPickStoped(up);\n    this.clearTimers();\n  }\n\n  private clearTimers() {\n    clearTimeout(this.eventHolder);\n    clearInterval(this.countInterval);\n    this.eventHolder = null;\n    this.countInterval = null;\n  }\n\n  private afterArrowKeysPressed(up: boolean, event: KeyboardEvent, start: boolean) {\n    if (start) {\n      this.loopPick(up, event);\n    } else {\n      this.afterPick(up);\n    }\n  }\n\n  private parseVal(value: string | number) {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    return parseFloat(value);\n  }\n\n  private getPrecision(step: number): number {\n    return /\\d*$/.exec(String(step))[0].length;\n  }\n\n  private round(value: number): number {\n    return Math.round(value * Math.pow(10, this.precision)) / Math.pow(10, this.precision);\n  }\n\n  private canIncrease(): boolean {\n    const canIncrease = (this.value <= this.max - this.step);\n    if (!canIncrease) {\n      this.value = this.max;\n    }\n    return canIncrease;\n  }\n\n  private canDecrease(): boolean {\n    const canDecrease = (this.value >= this.min + this.step);\n    if (!canDecrease) {\n      this.value = this.min;\n    }\n    return canDecrease;\n  }\n\n  private onPickStarted(increase: boolean) {\n    if (increase) {\n      if (this.canIncrease()) {\n        this.pickStarted.emit(true);\n        this.pickUpStarted.emit(true);\n      }\n    } else {\n      if (this.canDecrease()) {\n        this.pickStarted.emit(true);\n        this.pickDownStarted.emit(true);\n      }\n    }\n  }\n\n  private onPickStoped(increase: boolean) {\n    if (increase) {\n      if (this.canIncrease()) {\n        this.pickUpStoped.emit(true);\n        this.pickStoped.emit(true);\n      }\n    } else {\n      if (this.canDecrease()) {\n        this.pickDownStoped.emit(true);\n        this.pickStoped.emit(true);\n      }\n    }\n  }\n\n  private isLeftClick(witch: number): boolean {\n    return witch === 1;\n  }\n\n  private initPicker(): void {\n    this.min = this.parseVal(this.min) || this.numberPickerService.min;\n    this.max = this.parseVal(this.max) || this.numberPickerService.max;\n    this.step = this.parseVal(this.step) || this.numberPickerService.step;\n    this.value = this.parseVal(this.value) || this.numberPickerService.value;\n    this.pickStartAfter = this.parseVal(this.pickStartAfter) || this.numberPickerService.pickStartAfter;\n    this.pickTimer = this.parseVal(this.pickTimer) || this.numberPickerService.pickTimer;\n    this.precision = this.getPrecision(this.step) || this.numberPickerService.precision;\n    this.value = this.round(this.value);\n\n    if (this.value < this.min) {\n      this.value = this.min;\n    } else if (this.value > this.max) {\n      this.value = this.max;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NumberPickerComponent } from './number-picker.component';\nimport { CommonModule } from '@angular/common';\nimport { NumberPickerService } from './number-picker.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  providers: [NumberPickerService],\n  declarations: [NumberPickerComponent],\n  exports: [NumberPickerComponent]\n})\nexport class NumberPickerModule { }\n"]}