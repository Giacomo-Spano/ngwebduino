import { Injectable, Component, Input, Output, EventEmitter, NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NumberPickerService = /** @class */ (function () {
    function NumberPickerService() {
        /**
         * Min picker value
         */
        this.min = 0;
        /**
         * Max picker value
         */
        this.max = 100;
        /**
         * Pick step value
         */
        this.step = 1;
        /**
         * Delay for start picking values
         */
        this.pickStartAfter = 500;
        /**
         * Delay betweens each pick
         */
        this.pickTimer = 100;
        /**
         * value precision
         */
        this.precision = 1;
        /**
         * Inital picker value
         */
        this.value = null;
    }
    NumberPickerService.decorators = [
        { type: Injectable },
    ];
    return NumberPickerService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NumberPickerComponent$$1 = /** @class */ (function () {
    function NumberPickerComponent$$1(numberPickerService) {
        this.numberPickerService = numberPickerService;
        this.eventHolder = null;
        this.countInterval = null;
        this.isInputFocused = false;
        this.size = 'md';
        this.customClass = {};
        this.mouseWheel = false;
        this.arrowKeys = true;
        this.inputReadOnly = false;
        this.showUpButton = true;
        this.showDownButton = true;
        this.valueChange = new EventEmitter();
        this.minReached = new EventEmitter();
        this.maxReached = new EventEmitter();
        this.pickStarted = new EventEmitter();
        this.pickStoped = new EventEmitter();
        this.pickUpStarted = new EventEmitter();
        this.pickUpStoped = new EventEmitter();
        this.pickDownStarted = new EventEmitter();
        this.pickDownStoped = new EventEmitter();
    }
    /**
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initPicker();
    };
    /**
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.isHorizontal = /**
     * @return {?}
     */
    function () {
        return (this.buttonsOrientation !== 'v' && this.buttonsOrientation !== 'vertical');
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onFocus = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.isInputFocused = true;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onBlur = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.isInputFocused = false;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onMouseWheel = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isInputFocused) {
            event.preventDefault();
            var /** @type {?} */ wheelUp = null;
            var /** @type {?} */ delta = null;
            if (event.wheelDelta) {
                delta = event.wheelDelta / 60;
            }
            else if (event.detail) {
                delta = -event.detail / 2;
            }
            if (delta !== null) {
                wheelUp = delta > 0;
            }
            this.afterMouseWheels(wheelUp, event);
            event.stopPropagation();
        }
    };
    /**
     * @param {?} wheelUp
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.afterMouseWheels = /**
     * @param {?} wheelUp
     * @param {?} event
     * @return {?}
     */
    function (wheelUp, event) {
        this.onPickStarted(wheelUp);
        if (wheelUp) {
            this.onIncrease(event);
        }
        else {
            this.onDecrease(event);
        }
        this.onPickStoped(wheelUp);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onValueChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.value > this.max) {
            this.value = this.max;
        }
        else if (this.value < this.min) {
            this.value = this.min;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onDecrease = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        if (this.canDecrease()) {
            this.value = this.round((this.value > this.min) ? this.value -= this.step : this.value);
            this.valueChange.emit(this.value);
        }
        else {
            this.minReached.emit(true);
        }
        event.stopPropagation();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onIncrease = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        if (this.canIncrease()) {
            this.value = this.round((this.value < this.max) ? this.value += this.step : this.value);
            this.valueChange.emit(this.value);
        }
        else {
            this.maxReached.emit(true);
        }
        event.stopPropagation();
    };
    /**
     * @param {?} event
     * @param {?=} increase
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onMouseDown = /**
     * @param {?} event
     * @param {?=} increase
     * @return {?}
     */
    function (event, increase) {
        if (increase === void 0) { increase = true; }
        this.afterMouseDown(increase, event);
    };
    /**
     * @param {?} keyCode
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.isArrowUpDown = /**
     * @param {?} keyCode
     * @return {?}
     */
    function (keyCode) {
        return keyCode === 38 || keyCode === 40;
    };
    /**
     * @param {?} keyCode
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.isArowUp = /**
     * @param {?} keyCode
     * @return {?}
     */
    function (keyCode) {
        return keyCode === 38;
    };
    /**
     * @param {?} increase
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.loopPick = /**
     * @param {?} increase
     * @param {?} event
     * @return {?}
     */
    function (increase, event) {
        var _this = this;
        this.onPickStarted(increase);
        this.eventHolder = setTimeout(function () {
            _this.countInterval = setInterval(function () {
                if (increase) {
                    _this.onIncrease(event);
                }
                else {
                    _this.onDecrease(event);
                }
            }, _this.pickTimer);
        }, this.pickStartAfter);
    };
    /**
     * @param {?} event
     * @param {?=} increase
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onMouseUp = /**
     * @param {?} event
     * @param {?=} increase
     * @return {?}
     */
    function (event, increase) {
        if (increase === void 0) { increase = true; }
        this.afterMouseUp(increase, event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onKeyDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isArrowUpDown(event.keyCode)) {
            event.preventDefault();
            if (!this.eventHolder) {
                this.loopPick(this.isArowUp(event.keyCode), event);
            }
        }
        event.stopPropagation();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onKeyUp = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isArrowUpDown(event.keyCode)) {
            event.preventDefault();
            this.afterPick(this.isArowUp(event.keyCode));
        }
        event.stopPropagation();
    };
    /**
     * @param {?} up
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.afterMouseDown = /**
     * @param {?} up
     * @param {?} event
     * @return {?}
     */
    function (up, event) {
        event.preventDefault();
        if (this.isLeftClick(event.which)) {
            this.loopPick(up, event);
        }
        event.stopPropagation();
    };
    /**
     * @param {?} up
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.afterMouseUp = /**
     * @param {?} up
     * @param {?} event
     * @return {?}
     */
    function (up, event) {
        event.preventDefault();
        this.afterPick(up);
        event.stopPropagation();
    };
    /**
     * @param {?} up
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.afterPick = /**
     * @param {?} up
     * @return {?}
     */
    function (up) {
        this.onPickStoped(up);
        this.clearTimers();
    };
    /**
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.clearTimers = /**
     * @return {?}
     */
    function () {
        clearTimeout(this.eventHolder);
        clearInterval(this.countInterval);
        this.eventHolder = null;
        this.countInterval = null;
    };
    /**
     * @param {?} up
     * @param {?} event
     * @param {?} start
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.afterArrowKeysPressed = /**
     * @param {?} up
     * @param {?} event
     * @param {?} start
     * @return {?}
     */
    function (up, event, start) {
        if (start) {
            this.loopPick(up, event);
        }
        else {
            this.afterPick(up);
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.parseVal = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (typeof value === 'number') {
            return value;
        }
        return parseFloat(value);
    };
    /**
     * @param {?} step
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.getPrecision = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        return /\d*$/.exec(String(step))[0].length;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.round = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return Math.round(value * Math.pow(10, this.precision)) / Math.pow(10, this.precision);
    };
    /**
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.canIncrease = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ canIncrease = (this.value <= this.max - this.step);
        if (!canIncrease) {
            this.value = this.max;
        }
        return canIncrease;
    };
    /**
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.canDecrease = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ canDecrease = (this.value >= this.min + this.step);
        if (!canDecrease) {
            this.value = this.min;
        }
        return canDecrease;
    };
    /**
     * @param {?} increase
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onPickStarted = /**
     * @param {?} increase
     * @return {?}
     */
    function (increase) {
        if (increase) {
            if (this.canIncrease()) {
                this.pickStarted.emit(true);
                this.pickUpStarted.emit(true);
            }
        }
        else {
            if (this.canDecrease()) {
                this.pickStarted.emit(true);
                this.pickDownStarted.emit(true);
            }
        }
    };
    /**
     * @param {?} increase
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.onPickStoped = /**
     * @param {?} increase
     * @return {?}
     */
    function (increase) {
        if (increase) {
            if (this.canIncrease()) {
                this.pickUpStoped.emit(true);
                this.pickStoped.emit(true);
            }
        }
        else {
            if (this.canDecrease()) {
                this.pickDownStoped.emit(true);
                this.pickStoped.emit(true);
            }
        }
    };
    /**
     * @param {?} witch
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.isLeftClick = /**
     * @param {?} witch
     * @return {?}
     */
    function (witch) {
        return witch === 1;
    };
    /**
     * @return {?}
     */
    NumberPickerComponent$$1.prototype.initPicker = /**
     * @return {?}
     */
    function () {
        this.min = this.parseVal(this.min) || this.numberPickerService.min;
        this.max = this.parseVal(this.max) || this.numberPickerService.max;
        this.step = this.parseVal(this.step) || this.numberPickerService.step;
        this.value = this.parseVal(this.value) || this.numberPickerService.value;
        this.pickStartAfter = this.parseVal(this.pickStartAfter) || this.numberPickerService.pickStartAfter;
        this.pickTimer = this.parseVal(this.pickTimer) || this.numberPickerService.pickTimer;
        this.precision = this.getPrecision(this.step) || this.numberPickerService.precision;
        this.value = this.round(this.value);
        if (this.value < this.min) {
            this.value = this.min;
        }
        else if (this.value > this.max) {
            this.value = this.max;
        }
    };
    NumberPickerComponent$$1.decorators = [
        { type: Component, args: [{
                    selector: 'ng-number-picker',
                    template: "\n  <div class=\"input-group mb-3 input-{{size}} {{customClass.container}}\">\n  <!-- Horizontal decrease button orientation -->\n  <div class=\"input-group-prepend\" *ngIf=\"isHorizontal() && showDownButton\">\n    <span class=\"input-group-text decrease {{customClass.down}}\" (click)=\"onDecrease($event)\"\n    (mouseup)=\"onMouseUp($event, false)\" (mousedown)=\"onMouseDown($event, false)\">-</span>\n  </div>\n  <!-- Input prefix -->\n  <div *ngIf=\"prefix\" class=\"input-group-prepend\">\n    <span class=\"input-group-text {{customClass.prefix}}\">{{prefix}}</span>\n  </div>\n  <input type=\"number\" class=\"form-control\" name=\"input-spin-val\"\n  [(ngModel)]=\"value\"\n  [readOnly]=\"inputReadOnly\"\n  (blur)=\"onBlur($event)\"\n  (focus)=\"onFocus($event)\"\n  (mousewheel)=\"mouseWheel && onMouseWheel($event)\"\n  (keyup)=\"arrowKeys && onKeyUp($event)\"\n  (keydown)=\"arrowKeys && onKeyDown($event)\"\n  (keydown.arrowup)=\"arrowKeys && onIncrease($event)\"\n  (keydown.arrowdown)=\"arrowKeys && onDecrease($event)\"\n  (change)=\"onValueChange($event)\"\n  [placeholder]=\"placeholder\"\n  >\n  <!-- Input postfix -->\n  <div *ngIf=\"postfix\" class=\"input-group-prepend\">\n    <span class=\"input-group-text {{customClass.postfix}}\" [style.borderLeft]=\"'0'\">{{postfix}}</span>\n  </div>\n  <!-- Horizontal increase button orientation -->\n  <div class=\"input-group-prepend\" *ngIf=\"isHorizontal() && showUpButton\">\n    <span class=\"input-group-text increase {{customClass.up}}\" [style.borderLeft]=\"(!postfix) ? '0' : ''\" (click)=\"onIncrease($event)\"\n    (mouseup)=\"onMouseUp($event)\" (mousedown)=\"onMouseDown($event)\">+</span>\n  </div>\n  <!-- Vertical buttons orientation -->\n  <div class=\"input-group-append\" *ngIf=\"!isHorizontal()\">\n    <span class=\"input-group-text vertical p-0\">\n      <span *ngIf=\"showUpButton\" class=\"{{customClass.up}}\" (click)=\"onIncrease($event)\" (mouseup)=\"onMouseUp($event)\"\n      (mousedown)=\"onMouseDown($event)\">+</span>\n      <span *ngIf=\"showDownButton\" class=\"{{customClass.down}}\" (click)=\"onDecrease($event)\" (mouseup)=\"onMouseUp($event, false)\"\n      (mousedown)=\"onMouseDown($event, false)\">-</span>\n    </span>\n  </div>\n</div>\n  ",
                    styles: ["input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.decrease:hover,.increase:hover{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;background-color:#d8d8d8}.increase{border-top-right-radius:3px!important;border-bottom-right-radius:3px!important}.vertical{display:flex;justify-content:center;flex-direction:column;text-align:center;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.vertical span{line-height:15px}.input-md .vertical span,.input-sm .vertical span{padding:2px 10px}.input-lg .vertical span{padding:4px 10px}.input-xlg .vertical span{padding:7px 10px}.input-md,.input-medium{height:45px}.input-large,.input-lg{height:50px}.input-xlarge,.input-xlg{height:75px}.input-md input,.input-md span,.input-medium input,.input-medium span{font-size:22px}.input-large input,.input-large span,.input-lg input,.input-lg span{font-size:25px}.input-xlarge input,.input-xlarge span,.input-xlg input,.input-xlg span{font-size:38px}"]
                },] },
    ];
    /** @nocollapse */
    NumberPickerComponent$$1.ctorParameters = function () { return [
        { type: NumberPickerService, },
    ]; };
    NumberPickerComponent$$1.propDecorators = {
        "min": [{ type: Input },],
        "max": [{ type: Input },],
        "step": [{ type: Input },],
        "value": [{ type: Input },],
        "pickStartAfter": [{ type: Input },],
        "pickTimer": [{ type: Input },],
        "prefix": [{ type: Input },],
        "postfix": [{ type: Input },],
        "placeholder": [{ type: Input },],
        "buttonsOrientation": [{ type: Input },],
        "size": [{ type: Input },],
        "customClass": [{ type: Input },],
        "mouseWheel": [{ type: Input },],
        "arrowKeys": [{ type: Input },],
        "inputReadOnly": [{ type: Input },],
        "showUpButton": [{ type: Input },],
        "showDownButton": [{ type: Input },],
        "valueChange": [{ type: Output },],
        "minReached": [{ type: Output },],
        "maxReached": [{ type: Output },],
        "pickStarted": [{ type: Output },],
        "pickStoped": [{ type: Output },],
        "pickUpStarted": [{ type: Output },],
        "pickUpStoped": [{ type: Output },],
        "pickDownStarted": [{ type: Output },],
        "pickDownStoped": [{ type: Output },],
    };
    return NumberPickerComponent$$1;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NumberPickerModule = /** @class */ (function () {
    function NumberPickerModule() {
    }
    NumberPickerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule
                    ],
                    providers: [NumberPickerService],
                    declarations: [NumberPickerComponent$$1],
                    exports: [NumberPickerComponent$$1]
                },] },
    ];
    return NumberPickerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { NumberPickerService, NumberPickerComponent$$1 as NumberPickerComponent, NumberPickerModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctbnVtYmVyLXBpY2tlci5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vbmctbnVtYmVyLXBpY2tlci9saWIvbnVtYmVyLXBpY2tlci5zZXJ2aWNlLnRzIiwibmc6Ly9uZy1udW1iZXItcGlja2VyL2xpYi9udW1iZXItcGlja2VyLmNvbXBvbmVudC50cyIsIm5nOi8vbmctbnVtYmVyLXBpY2tlci9saWIvbnVtYmVyLXBpY2tlci5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgYnV0dG9uc09yaWVudGF0aW9uVHlwZSwgc2l6ZVR5cGUgfSBmcm9tICcuL251bWJlci1waWNrZXIuY29uZmlnJztcbmltcG9ydCB7IEN1c3RvbUNsYXNzZXMgfSBmcm9tICcuL251bWJlci1waWNrZXIuY29uZmlnJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE51bWJlclBpY2tlclNlcnZpY2Uge1xuICAvKipcbiAgICogTWluIHBpY2tlciB2YWx1ZVxuICAgKi9cbiAgbWluID0gMDtcbiAgLyoqXG4gICAqIE1heCBwaWNrZXIgdmFsdWVcbiAgICovXG4gIG1heCA9IDEwMDtcbiAgLyoqXG4gICAqIFBpY2sgc3RlcCB2YWx1ZVxuICAgKi9cbiAgc3RlcCA9IDE7XG4gIC8qKlxuICAgKiBEZWxheSBmb3Igc3RhcnQgcGlja2luZyB2YWx1ZXNcbiAgICovXG4gIHBpY2tTdGFydEFmdGVyID0gNTAwO1xuICAvKipcbiAgICogRGVsYXkgYmV0d2VlbnMgZWFjaCBwaWNrXG4gICAqL1xuICBwaWNrVGltZXIgPSAxMDA7XG4gIC8qKlxuICAgKiB2YWx1ZSBwcmVjaXNpb25cbiAgICovXG4gIHByZWNpc2lvbiA9IDE7XG4gIC8qKlxuICAgKiBJbml0YWwgcGlja2VyIHZhbHVlXG4gICAqL1xuICB2YWx1ZSA9IG51bGw7XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGJ1dHRvbnNPcmllbnRhdGlvblR5cGUsIHNpemVUeXBlLCBDdXN0b21DbGFzc2VzIH0gZnJvbSAnLi9udW1iZXItcGlja2VyLmNvbmZpZyc7XG5pbXBvcnQgeyBOdW1iZXJQaWNrZXJTZXJ2aWNlIH0gZnJvbSAnLi4vcHVibGljX2FwaSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nLW51bWJlci1waWNrZXInLFxuICB0ZW1wbGF0ZTogYFxuICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXAgbWItMyBpbnB1dC17e3NpemV9fSB7e2N1c3RvbUNsYXNzLmNvbnRhaW5lcn19XCI+XG4gIDwhLS0gSG9yaXpvbnRhbCBkZWNyZWFzZSBidXR0b24gb3JpZW50YXRpb24gLS0+XG4gIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cC1wcmVwZW5kXCIgKm5nSWY9XCJpc0hvcml6b250YWwoKSAmJiBzaG93RG93bkJ1dHRvblwiPlxuICAgIDxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dCBkZWNyZWFzZSB7e2N1c3RvbUNsYXNzLmRvd259fVwiIChjbGljayk9XCJvbkRlY3JlYXNlKCRldmVudClcIlxuICAgIChtb3VzZXVwKT1cIm9uTW91c2VVcCgkZXZlbnQsIGZhbHNlKVwiIChtb3VzZWRvd24pPVwib25Nb3VzZURvd24oJGV2ZW50LCBmYWxzZSlcIj4tPC9zcGFuPlxuICA8L2Rpdj5cbiAgPCEtLSBJbnB1dCBwcmVmaXggLS0+XG4gIDxkaXYgKm5nSWY9XCJwcmVmaXhcIiBjbGFzcz1cImlucHV0LWdyb3VwLXByZXBlbmRcIj5cbiAgICA8c3BhbiBjbGFzcz1cImlucHV0LWdyb3VwLXRleHQge3tjdXN0b21DbGFzcy5wcmVmaXh9fVwiPnt7cHJlZml4fX08L3NwYW4+XG4gIDwvZGl2PlxuICA8aW5wdXQgdHlwZT1cIm51bWJlclwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgbmFtZT1cImlucHV0LXNwaW4tdmFsXCJcbiAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXG4gIFtyZWFkT25seV09XCJpbnB1dFJlYWRPbmx5XCJcbiAgKGJsdXIpPVwib25CbHVyKCRldmVudClcIlxuICAoZm9jdXMpPVwib25Gb2N1cygkZXZlbnQpXCJcbiAgKG1vdXNld2hlZWwpPVwibW91c2VXaGVlbCAmJiBvbk1vdXNlV2hlZWwoJGV2ZW50KVwiXG4gIChrZXl1cCk9XCJhcnJvd0tleXMgJiYgb25LZXlVcCgkZXZlbnQpXCJcbiAgKGtleWRvd24pPVwiYXJyb3dLZXlzICYmIG9uS2V5RG93bigkZXZlbnQpXCJcbiAgKGtleWRvd24uYXJyb3d1cCk9XCJhcnJvd0tleXMgJiYgb25JbmNyZWFzZSgkZXZlbnQpXCJcbiAgKGtleWRvd24uYXJyb3dkb3duKT1cImFycm93S2V5cyAmJiBvbkRlY3JlYXNlKCRldmVudClcIlxuICAoY2hhbmdlKT1cIm9uVmFsdWVDaGFuZ2UoJGV2ZW50KVwiXG4gIFtwbGFjZWhvbGRlcl09XCJwbGFjZWhvbGRlclwiXG4gID5cbiAgPCEtLSBJbnB1dCBwb3N0Zml4IC0tPlxuICA8ZGl2ICpuZ0lmPVwicG9zdGZpeFwiIGNsYXNzPVwiaW5wdXQtZ3JvdXAtcHJlcGVuZFwiPlxuICAgIDxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dCB7e2N1c3RvbUNsYXNzLnBvc3RmaXh9fVwiIFtzdHlsZS5ib3JkZXJMZWZ0XT1cIicwJ1wiPnt7cG9zdGZpeH19PC9zcGFuPlxuICA8L2Rpdj5cbiAgPCEtLSBIb3Jpem9udGFsIGluY3JlYXNlIGJ1dHRvbiBvcmllbnRhdGlvbiAtLT5cbiAgPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwLXByZXBlbmRcIiAqbmdJZj1cImlzSG9yaXpvbnRhbCgpICYmIHNob3dVcEJ1dHRvblwiPlxuICAgIDxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dCBpbmNyZWFzZSB7e2N1c3RvbUNsYXNzLnVwfX1cIiBbc3R5bGUuYm9yZGVyTGVmdF09XCIoIXBvc3RmaXgpID8gJzAnIDogJydcIiAoY2xpY2spPVwib25JbmNyZWFzZSgkZXZlbnQpXCJcbiAgICAobW91c2V1cCk9XCJvbk1vdXNlVXAoJGV2ZW50KVwiIChtb3VzZWRvd24pPVwib25Nb3VzZURvd24oJGV2ZW50KVwiPis8L3NwYW4+XG4gIDwvZGl2PlxuICA8IS0tIFZlcnRpY2FsIGJ1dHRvbnMgb3JpZW50YXRpb24gLS0+XG4gIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cC1hcHBlbmRcIiAqbmdJZj1cIiFpc0hvcml6b250YWwoKVwiPlxuICAgIDxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dCB2ZXJ0aWNhbCBwLTBcIj5cbiAgICAgIDxzcGFuICpuZ0lmPVwic2hvd1VwQnV0dG9uXCIgY2xhc3M9XCJ7e2N1c3RvbUNsYXNzLnVwfX1cIiAoY2xpY2spPVwib25JbmNyZWFzZSgkZXZlbnQpXCIgKG1vdXNldXApPVwib25Nb3VzZVVwKCRldmVudClcIlxuICAgICAgKG1vdXNlZG93bik9XCJvbk1vdXNlRG93bigkZXZlbnQpXCI+Kzwvc3Bhbj5cbiAgICAgIDxzcGFuICpuZ0lmPVwic2hvd0Rvd25CdXR0b25cIiBjbGFzcz1cInt7Y3VzdG9tQ2xhc3MuZG93bn19XCIgKGNsaWNrKT1cIm9uRGVjcmVhc2UoJGV2ZW50KVwiIChtb3VzZXVwKT1cIm9uTW91c2VVcCgkZXZlbnQsIGZhbHNlKVwiXG4gICAgICAobW91c2Vkb3duKT1cIm9uTW91c2VEb3duKCRldmVudCwgZmFsc2UpXCI+LTwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gIDwvZGl2PlxuPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW2BpbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24saW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uey13ZWJraXQtYXBwZWFyYW5jZTpub25lO21hcmdpbjowfS5kZWNyZWFzZTpob3ZlciwuaW5jcmVhc2U6aG92ZXJ7LXdlYmtpdC10b3VjaC1jYWxsb3V0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6I2Q4ZDhkOH0uaW5jcmVhc2V7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6M3B4IWltcG9ydGFudDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czozcHghaW1wb3J0YW50fS52ZXJ0aWNhbHtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47dGV4dC1hbGlnbjpjZW50ZXI7LXdlYmtpdC10b3VjaC1jYWxsb3V0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2N1cnNvcjpwb2ludGVyfS52ZXJ0aWNhbCBzcGFue2xpbmUtaGVpZ2h0OjE1cHh9LmlucHV0LW1kIC52ZXJ0aWNhbCBzcGFuLC5pbnB1dC1zbSAudmVydGljYWwgc3BhbntwYWRkaW5nOjJweCAxMHB4fS5pbnB1dC1sZyAudmVydGljYWwgc3BhbntwYWRkaW5nOjRweCAxMHB4fS5pbnB1dC14bGcgLnZlcnRpY2FsIHNwYW57cGFkZGluZzo3cHggMTBweH0uaW5wdXQtbWQsLmlucHV0LW1lZGl1bXtoZWlnaHQ6NDVweH0uaW5wdXQtbGFyZ2UsLmlucHV0LWxne2hlaWdodDo1MHB4fS5pbnB1dC14bGFyZ2UsLmlucHV0LXhsZ3toZWlnaHQ6NzVweH0uaW5wdXQtbWQgaW5wdXQsLmlucHV0LW1kIHNwYW4sLmlucHV0LW1lZGl1bSBpbnB1dCwuaW5wdXQtbWVkaXVtIHNwYW57Zm9udC1zaXplOjIycHh9LmlucHV0LWxhcmdlIGlucHV0LC5pbnB1dC1sYXJnZSBzcGFuLC5pbnB1dC1sZyBpbnB1dCwuaW5wdXQtbGcgc3Bhbntmb250LXNpemU6MjVweH0uaW5wdXQteGxhcmdlIGlucHV0LC5pbnB1dC14bGFyZ2Ugc3BhbiwuaW5wdXQteGxnIGlucHV0LC5pbnB1dC14bGcgc3Bhbntmb250LXNpemU6MzhweH1gXVxufSlcbmV4cG9ydCBjbGFzcyBOdW1iZXJQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBwcml2YXRlIHByZWNpc2lvbjogbnVtYmVyO1xuICBwcml2YXRlIGV2ZW50SG9sZGVyID0gbnVsbDtcbiAgcHJpdmF0ZSBjb3VudEludGVydmFsID0gbnVsbDtcbiAgcHJpdmF0ZSBpc0lucHV0Rm9jdXNlZCA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIG1pbjogbnVtYmVyO1xuICBASW5wdXQoKSBtYXg6IG51bWJlcjtcbiAgQElucHV0KCkgc3RlcDogbnVtYmVyO1xuICBASW5wdXQoKSB2YWx1ZTogbnVtYmVyO1xuICBASW5wdXQoKSBwaWNrU3RhcnRBZnRlcjogbnVtYmVyO1xuICBASW5wdXQoKSBwaWNrVGltZXI6IG51bWJlcjtcbiAgQElucHV0KCkgcHJlZml4OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHBvc3RmaXg6IHN0cmluZztcbiAgQElucHV0KCkgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgQElucHV0KCkgYnV0dG9uc09yaWVudGF0aW9uOiBidXR0b25zT3JpZW50YXRpb25UeXBlO1xuICBASW5wdXQoKSBzaXplOiBzaXplVHlwZSA9ICdtZCc7XG4gIEBJbnB1dCgpIGN1c3RvbUNsYXNzOiBDdXN0b21DbGFzc2VzID0ge307XG4gIEBJbnB1dCgpIG1vdXNlV2hlZWwgPSBmYWxzZTtcbiAgQElucHV0KCkgYXJyb3dLZXlzID0gdHJ1ZTtcbiAgQElucHV0KCkgaW5wdXRSZWFkT25seSA9IGZhbHNlO1xuICBASW5wdXQoKSBzaG93VXBCdXR0b24gPSB0cnVlO1xuICBASW5wdXQoKSBzaG93RG93bkJ1dHRvbiA9IHRydWU7XG4gIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBtaW5SZWFjaGVkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBtYXhSZWFjaGVkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwaWNrU3RhcnRlZDogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcGlja1N0b3BlZDogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcGlja1VwU3RhcnRlZDogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcGlja1VwU3RvcGVkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwaWNrRG93blN0YXJ0ZWQ6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHBpY2tEb3duU3RvcGVkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBudW1iZXJQaWNrZXJTZXJ2aWNlOiBOdW1iZXJQaWNrZXJTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluaXRQaWNrZXIoKTtcbiAgfVxuXG4gIGlzSG9yaXpvbnRhbCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKHRoaXMuYnV0dG9uc09yaWVudGF0aW9uICE9PSAndicgJiYgdGhpcy5idXR0b25zT3JpZW50YXRpb24gIT09ICd2ZXJ0aWNhbCcpO1xuICB9XG5cbiAgb25Gb2N1cyhldmVudDogRm9jdXNFdmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgdGhpcy5pc0lucHV0Rm9jdXNlZCA9IHRydWU7XG4gIH1cblxuICBvbkJsdXIoZXZlbnQ6IEV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB0aGlzLmlzSW5wdXRGb2N1c2VkID0gZmFsc2U7XG4gIH1cblxuICBvbk1vdXNlV2hlZWwoZXZlbnQ6IE1vdXNlV2hlZWxFdmVudCkge1xuICAgIGlmICh0aGlzLmlzSW5wdXRGb2N1c2VkKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgbGV0IHdoZWVsVXAgPSBudWxsO1xuICAgICAgbGV0IGRlbHRhID0gbnVsbDtcblxuICAgICAgaWYgKGV2ZW50LndoZWVsRGVsdGEpIHtcbiAgICAgICAgZGVsdGEgPSBldmVudC53aGVlbERlbHRhIC8gNjA7XG4gICAgICB9IGVsc2UgaWYgKGV2ZW50LmRldGFpbCkge1xuICAgICAgICBkZWx0YSA9IC1ldmVudC5kZXRhaWwgLyAyO1xuICAgICAgfVxuXG4gICAgICBpZiAoZGVsdGEgIT09IG51bGwpIHtcbiAgICAgICAgd2hlZWxVcCA9IGRlbHRhID4gMDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hZnRlck1vdXNlV2hlZWxzKHdoZWVsVXAsIGV2ZW50KTtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYWZ0ZXJNb3VzZVdoZWVscyh3aGVlbFVwOiBhbnksIGV2ZW50OiBXaGVlbEV2ZW50KSB7XG4gICAgdGhpcy5vblBpY2tTdGFydGVkKHdoZWVsVXApO1xuICAgIGlmICh3aGVlbFVwKSB7XG4gICAgICB0aGlzLm9uSW5jcmVhc2UoZXZlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9uRGVjcmVhc2UoZXZlbnQpO1xuICAgIH1cbiAgICB0aGlzLm9uUGlja1N0b3BlZCh3aGVlbFVwKTtcbiAgfVxuXG4gIG9uVmFsdWVDaGFuZ2UoZXZlbnQ6IEV2ZW50KSB7XG4gICAgaWYgKHRoaXMudmFsdWUgPiB0aGlzLm1heCkge1xuICAgICAgdGhpcy52YWx1ZSA9IHRoaXMubWF4O1xuICAgIH0gZWxzZSBpZiAodGhpcy52YWx1ZSA8IHRoaXMubWluKSB7XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5taW47XG4gICAgfVxuICB9XG5cbiAgb25EZWNyZWFzZShldmVudDogTW91c2VFdmVudCB8IE1vdXNlV2hlZWxFdmVudCB8IEtleWJvYXJkRXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmICh0aGlzLmNhbkRlY3JlYXNlKCkpIHtcbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnJvdW5kKCh0aGlzLnZhbHVlID4gdGhpcy5taW4pID8gdGhpcy52YWx1ZSAtPSB0aGlzLnN0ZXAgOiB0aGlzLnZhbHVlKTtcbiAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh0aGlzLnZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5taW5SZWFjaGVkLmVtaXQodHJ1ZSk7XG4gICAgfVxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgb25JbmNyZWFzZShldmVudDogTW91c2VFdmVudCB8IE1vdXNlV2hlZWxFdmVudCB8IEtleWJvYXJkRXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmICh0aGlzLmNhbkluY3JlYXNlKCkpIHtcbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnJvdW5kKCh0aGlzLnZhbHVlIDwgdGhpcy5tYXgpID8gdGhpcy52YWx1ZSArPSB0aGlzLnN0ZXAgOiB0aGlzLnZhbHVlKTtcbiAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh0aGlzLnZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5tYXhSZWFjaGVkLmVtaXQodHJ1ZSk7XG4gICAgfVxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgb25Nb3VzZURvd24oZXZlbnQ6IE1vdXNlRXZlbnQsIGluY3JlYXNlOiBib29sZWFuID0gdHJ1ZSkge1xuICAgIHRoaXMuYWZ0ZXJNb3VzZURvd24oaW5jcmVhc2UsIGV2ZW50KTtcbiAgfVxuXG4gIHByaXZhdGUgaXNBcnJvd1VwRG93bihrZXlDb2RlOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4ga2V5Q29kZSA9PT0gMzggfHwga2V5Q29kZSA9PT0gNDA7XG4gIH1cblxuICBwcml2YXRlIGlzQXJvd1VwKGtleUNvZGU6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIHJldHVybiBrZXlDb2RlID09PSAzODtcbiAgfVxuXG4gIHByaXZhdGUgbG9vcFBpY2soaW5jcmVhc2U6IGJvb2xlYW4sIGV2ZW50OiBNb3VzZUV2ZW50IHwgS2V5Ym9hcmRFdmVudCkge1xuICAgIHRoaXMub25QaWNrU3RhcnRlZChpbmNyZWFzZSk7XG4gICAgdGhpcy5ldmVudEhvbGRlciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5jb3VudEludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBpZiAoaW5jcmVhc2UpIHtcbiAgICAgICAgICB0aGlzLm9uSW5jcmVhc2UoZXZlbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMub25EZWNyZWFzZShldmVudCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMucGlja1RpbWVyKTtcbiAgICB9LCB0aGlzLnBpY2tTdGFydEFmdGVyKTtcbiAgfVxuXG4gIG9uTW91c2VVcChldmVudDogTW91c2VFdmVudCwgaW5jcmVhc2U6IGJvb2xlYW4gPSB0cnVlKSB7XG4gICAgdGhpcy5hZnRlck1vdXNlVXAoaW5jcmVhc2UsIGV2ZW50KTtcbiAgfVxuXG4gIG9uS2V5RG93bihldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIGlmICh0aGlzLmlzQXJyb3dVcERvd24oZXZlbnQua2V5Q29kZSkpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAoIXRoaXMuZXZlbnRIb2xkZXIpIHtcbiAgICAgICAgdGhpcy5sb29wUGljayh0aGlzLmlzQXJvd1VwKGV2ZW50LmtleUNvZGUpLCBldmVudCk7XG4gICAgICB9XG4gICAgfVxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgb25LZXlVcChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIGlmICh0aGlzLmlzQXJyb3dVcERvd24oZXZlbnQua2V5Q29kZSkpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLmFmdGVyUGljayh0aGlzLmlzQXJvd1VwKGV2ZW50LmtleUNvZGUpKTtcbiAgICB9XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH1cblxuICBwcml2YXRlIGFmdGVyTW91c2VEb3duKHVwOiBib29sZWFuLCBldmVudDogTW91c2VFdmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKHRoaXMuaXNMZWZ0Q2xpY2soZXZlbnQud2hpY2gpKSB7XG4gICAgICB0aGlzLmxvb3BQaWNrKHVwLCBldmVudCk7XG4gICAgfVxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgcHJpdmF0ZSBhZnRlck1vdXNlVXAodXA6IGJvb2xlYW4sIGV2ZW50OiBNb3VzZUV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmFmdGVyUGljayh1cCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH1cblxuICBwcml2YXRlIGFmdGVyUGljayh1cDogYm9vbGVhbikge1xuICAgIHRoaXMub25QaWNrU3RvcGVkKHVwKTtcbiAgICB0aGlzLmNsZWFyVGltZXJzKCk7XG4gIH1cblxuICBwcml2YXRlIGNsZWFyVGltZXJzKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLmV2ZW50SG9sZGVyKTtcbiAgICBjbGVhckludGVydmFsKHRoaXMuY291bnRJbnRlcnZhbCk7XG4gICAgdGhpcy5ldmVudEhvbGRlciA9IG51bGw7XG4gICAgdGhpcy5jb3VudEludGVydmFsID0gbnVsbDtcbiAgfVxuXG4gIHByaXZhdGUgYWZ0ZXJBcnJvd0tleXNQcmVzc2VkKHVwOiBib29sZWFuLCBldmVudDogS2V5Ym9hcmRFdmVudCwgc3RhcnQ6IGJvb2xlYW4pIHtcbiAgICBpZiAoc3RhcnQpIHtcbiAgICAgIHRoaXMubG9vcFBpY2sodXAsIGV2ZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZnRlclBpY2sodXApO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgcGFyc2VWYWwodmFsdWU6IHN0cmluZyB8IG51bWJlcikge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRQcmVjaXNpb24oc3RlcDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gL1xcZCokLy5leGVjKFN0cmluZyhzdGVwKSlbMF0ubGVuZ3RoO1xuICB9XG5cbiAgcHJpdmF0ZSByb3VuZCh2YWx1ZTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIE1hdGgucG93KDEwLCB0aGlzLnByZWNpc2lvbikpIC8gTWF0aC5wb3coMTAsIHRoaXMucHJlY2lzaW9uKTtcbiAgfVxuXG4gIHByaXZhdGUgY2FuSW5jcmVhc2UoKTogYm9vbGVhbiB7XG4gICAgY29uc3QgY2FuSW5jcmVhc2UgPSAodGhpcy52YWx1ZSA8PSB0aGlzLm1heCAtIHRoaXMuc3RlcCk7XG4gICAgaWYgKCFjYW5JbmNyZWFzZSkge1xuICAgICAgdGhpcy52YWx1ZSA9IHRoaXMubWF4O1xuICAgIH1cbiAgICByZXR1cm4gY2FuSW5jcmVhc2U7XG4gIH1cblxuICBwcml2YXRlIGNhbkRlY3JlYXNlKCk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGNhbkRlY3JlYXNlID0gKHRoaXMudmFsdWUgPj0gdGhpcy5taW4gKyB0aGlzLnN0ZXApO1xuICAgIGlmICghY2FuRGVjcmVhc2UpIHtcbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLm1pbjtcbiAgICB9XG4gICAgcmV0dXJuIGNhbkRlY3JlYXNlO1xuICB9XG5cbiAgcHJpdmF0ZSBvblBpY2tTdGFydGVkKGluY3JlYXNlOiBib29sZWFuKSB7XG4gICAgaWYgKGluY3JlYXNlKSB7XG4gICAgICBpZiAodGhpcy5jYW5JbmNyZWFzZSgpKSB7XG4gICAgICAgIHRoaXMucGlja1N0YXJ0ZWQuZW1pdCh0cnVlKTtcbiAgICAgICAgdGhpcy5waWNrVXBTdGFydGVkLmVtaXQodHJ1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0aGlzLmNhbkRlY3JlYXNlKCkpIHtcbiAgICAgICAgdGhpcy5waWNrU3RhcnRlZC5lbWl0KHRydWUpO1xuICAgICAgICB0aGlzLnBpY2tEb3duU3RhcnRlZC5lbWl0KHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgb25QaWNrU3RvcGVkKGluY3JlYXNlOiBib29sZWFuKSB7XG4gICAgaWYgKGluY3JlYXNlKSB7XG4gICAgICBpZiAodGhpcy5jYW5JbmNyZWFzZSgpKSB7XG4gICAgICAgIHRoaXMucGlja1VwU3RvcGVkLmVtaXQodHJ1ZSk7XG4gICAgICAgIHRoaXMucGlja1N0b3BlZC5lbWl0KHRydWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodGhpcy5jYW5EZWNyZWFzZSgpKSB7XG4gICAgICAgIHRoaXMucGlja0Rvd25TdG9wZWQuZW1pdCh0cnVlKTtcbiAgICAgICAgdGhpcy5waWNrU3RvcGVkLmVtaXQodHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBpc0xlZnRDbGljayh3aXRjaDogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHdpdGNoID09PSAxO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0UGlja2VyKCk6IHZvaWQge1xuICAgIHRoaXMubWluID0gdGhpcy5wYXJzZVZhbCh0aGlzLm1pbikgfHwgdGhpcy5udW1iZXJQaWNrZXJTZXJ2aWNlLm1pbjtcbiAgICB0aGlzLm1heCA9IHRoaXMucGFyc2VWYWwodGhpcy5tYXgpIHx8IHRoaXMubnVtYmVyUGlja2VyU2VydmljZS5tYXg7XG4gICAgdGhpcy5zdGVwID0gdGhpcy5wYXJzZVZhbCh0aGlzLnN0ZXApIHx8IHRoaXMubnVtYmVyUGlja2VyU2VydmljZS5zdGVwO1xuICAgIHRoaXMudmFsdWUgPSB0aGlzLnBhcnNlVmFsKHRoaXMudmFsdWUpIHx8IHRoaXMubnVtYmVyUGlja2VyU2VydmljZS52YWx1ZTtcbiAgICB0aGlzLnBpY2tTdGFydEFmdGVyID0gdGhpcy5wYXJzZVZhbCh0aGlzLnBpY2tTdGFydEFmdGVyKSB8fCB0aGlzLm51bWJlclBpY2tlclNlcnZpY2UucGlja1N0YXJ0QWZ0ZXI7XG4gICAgdGhpcy5waWNrVGltZXIgPSB0aGlzLnBhcnNlVmFsKHRoaXMucGlja1RpbWVyKSB8fCB0aGlzLm51bWJlclBpY2tlclNlcnZpY2UucGlja1RpbWVyO1xuICAgIHRoaXMucHJlY2lzaW9uID0gdGhpcy5nZXRQcmVjaXNpb24odGhpcy5zdGVwKSB8fCB0aGlzLm51bWJlclBpY2tlclNlcnZpY2UucHJlY2lzaW9uO1xuICAgIHRoaXMudmFsdWUgPSB0aGlzLnJvdW5kKHRoaXMudmFsdWUpO1xuXG4gICAgaWYgKHRoaXMudmFsdWUgPCB0aGlzLm1pbikge1xuICAgICAgdGhpcy52YWx1ZSA9IHRoaXMubWluO1xuICAgIH0gZWxzZSBpZiAodGhpcy52YWx1ZSA+IHRoaXMubWF4KSB7XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5tYXg7XG4gICAgfVxuICB9XG5cbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE51bWJlclBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vbnVtYmVyLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE51bWJlclBpY2tlclNlcnZpY2UgfSBmcm9tICcuL251bWJlci1waWNrZXIuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbTnVtYmVyUGlja2VyU2VydmljZV0sXG4gIGRlY2xhcmF0aW9uczogW051bWJlclBpY2tlckNvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtOdW1iZXJQaWNrZXJDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIE51bWJlclBpY2tlck1vZHVsZSB7IH1cbiJdLCJuYW1lcyI6WyJOdW1iZXJQaWNrZXJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7O21CQVNRLENBQUM7Ozs7bUJBSUQsR0FBRzs7OztvQkFJRixDQUFDOzs7OzhCQUlTLEdBQUc7Ozs7eUJBSVIsR0FBRzs7Ozt5QkFJSCxDQUFDOzs7O3FCQUlMLElBQUk7OztnQkE3QmIsVUFBVTs7OEJBSlg7Ozs7Ozs7QUNBQTtJQXFGRSxrQ0FBb0IsbUJBQXdDO1FBQXhDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7MkJBL0J0QyxJQUFJOzZCQUNGLElBQUk7OEJBQ0gsS0FBSztvQkFZSixJQUFJOzJCQUNRLEVBQUU7MEJBQ2xCLEtBQUs7eUJBQ04sSUFBSTs2QkFDQSxLQUFLOzRCQUNOLElBQUk7OEJBQ0YsSUFBSTsyQkFDZ0IsSUFBSSxZQUFZLEVBQUU7MEJBQ2xCLElBQUksWUFBWSxFQUFFOzBCQUNsQixJQUFJLFlBQVksRUFBRTsyQkFDakIsSUFBSSxZQUFZLEVBQUU7MEJBQ25C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